{"ast":null,"code":"var _jsxFileName = \"E:\\\\aca\\\\isa\\\\nova-isa-projekat\\\\isa2021\\\\isa-projekat\\\\ISA-front\\\\src\\\\Components\\\\Modal\\\\Services.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport Axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\n\nclass Services extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      drugsToAdd: [],\n      drugs: [],\n      page: 1,\n      modalSize: 'lg',\n      selectedDate: new Date(),\n      pharmacyId: '',\n      drugForAdd: '',\n      drugRemove: '',\n      selectedCount: '',\n      showDate: false\n    };\n\n    this.addItem = item => {\n      this.setState({\n        drugsToAdd: [...this.state.drugsToAdd, item]\n      });\n    };\n\n    this.addItem1 = item => {\n      this.setState({\n        drugs: [...this.state.drugs, item]\n      });\n    };\n\n    this.handleAdd = () => {\n      let drugDTO = {\n        drugInstanceId: this.state.drugForAdd.Id,\n        drugName: this.state.drugForAdd.EntityDTO.name,\n        fabricCode: this.state.drugForAdd.EntityDTO.fabricCode,\n        producerName: this.state.drugForAdd.EntityDTO.producerName,\n        quantity: this.state.drugForAdd.EntityDTO.quantity,\n        amount: this.state.selectedCount\n      };\n      console.log(\"Bidibou\");\n      console.log(this.state.drugForAdd);\n      this.removeItem(this.state.drugForAdd);\n      console.log('res.data');\n      console.log(this.state.drugForAdd);\n      this.addItem(drugDTO);\n      this.setState({\n        page: 1,\n        selectedCount: '',\n        drugForAdd: ''\n      });\n    };\n\n    this.handleRemove = drugRemove => {\n      console.log(drugRemove);\n      let drugDTO = {\n        Id: drugRemove.drugInstanceId,\n        EntityDTO: {\n          name: drugRemove.drugName,\n          fabricCode: drugRemove.fabricCode,\n          producerName: drugRemove.producerName,\n          quantity: drugRemove.quantity\n        }\n      };\n      console.log(\"Bidibou\");\n      console.log(drugDTO);\n      this.removeItem1(drugRemove);\n      console.log('res.data');\n      console.log(this.state.drugForAdd);\n      this.addItem1(drugDTO);\n      this.setState({\n        page: 1,\n        selectedCount: ''\n      });\n    };\n\n    this.handleCreateOrder = () => {\n      let createOrderDTO = {\n        pharmacyId: this.props.pharmacyId,\n        listOfDrugs: this.state.drugsToAdd,\n        dateTo: this.state.selectedDate\n      };\n      console.log(createOrderDTO);\n      Axios.post(API_URL + \"/order/addNewOrder\", createOrderDTO, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        console.log(res.status);\n\n        if (res.status === 201) {\n          alert(\"New Oreder is succesfully created\");\n          this.handleClickOnClose();\n        } else {\n          alert(\"It is not possibe to create new order\");\n        }\n      }).catch(err => {});\n    };\n\n    this.isValidData = addDrugToPharmacyDTO => {\n      if (addDrugToPharmacyDTO.drugId === '') {\n        return false;\n      }\n\n      if (addDrugToPharmacyDTO.dateTo === new Date()) {\n        return false;\n      }\n\n      if (addDrugToPharmacyDTO.amount < 1) {\n        return false;\n      }\n\n      if (addDrugToPharmacyDTO.price < 1) {\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleSelectedDateChange = date => {\n      this.setState({\n        selectedDate: date\n      });\n    };\n\n    this.handleSelectedCountChange = event => {\n      this.setState({\n        selectedCount: event.target.value\n      });\n    };\n\n    this.handleClickOnCreateOrder = () => {\n      if (this.state.drugsToAdd.length < 1) {\n        alert(\"Drug list is empty\");\n      } else {\n        this.setState({\n          page: 3\n        });\n      }\n    };\n\n    this.handleClickOnClose = () => {\n      this.setState({\n        drugsToAdd: [],\n        drugs: [],\n        page: 1,\n        selectedDate: new Date(),\n        pharmacyId: '',\n        drugForAdd: '',\n        selectedCount: ''\n      });\n      this.handleUpdte();\n      this.props.closeModal();\n    };\n\n    this.handleUpdte = () => {\n      Axios.get(API_URL + \"/drug/drugsInPharmacy/\" + localStorage.getItem(\"keyPharmacyId\"), {\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        console.log(res.data);\n        this.setState({\n          drugs: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onAddClick = id => {\n      this.setState({\n        page: 2,\n        drugForAdd: id\n      });\n    };\n\n    this.handleBack = event => {\n      this.setState({\n        page: 1,\n        selectedCount: ''\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  removeItem(e) {\n    var array = [...this.state.drugs];\n    var index = array.indexOf(e);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({\n        drugs: array\n      });\n    }\n  }\n\n  removeItem1(e) {\n    var array = [...this.state.drugsToAdd];\n    var index = array.indexOf(e);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({\n        drugsToAdd: array\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: this.props.show,\n      size: \"lg\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          style: {\n            marginLeft: '37%'\n          },\n          children: \"Create Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            style: {\n              marginTop: \"5%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Selected drugs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              border: \"1\",\n              style: {\n                width: \"100%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Usluga\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Cena\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 9\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 8\n                }, this), this.props.prices.map(price => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: price.EntityDTO.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 10\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: price.EntityDTO.price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 10\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    onClick: () => this.handleRemove(price),\n                    onMouseOver: hoverrule,\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 9\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          hidden: this.state.page === 3,\n          onClick: () => this.handleClickOnCreateOrder(),\n          children: \"Create order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.handleClickOnClose(),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Services;","map":{"version":3,"sources":["E:/aca/isa/nova-isa-projekat/isa2021/isa-projekat/ISA-front/src/Components/Modal/Services.js"],"names":["React","Component","Button","Modal","Axios","DatePicker","GetAuthorisation","Redirect","API_URL","Services","state","drugsToAdd","drugs","page","modalSize","selectedDate","Date","pharmacyId","drugForAdd","drugRemove","selectedCount","showDate","addItem","item","setState","addItem1","handleAdd","drugDTO","drugInstanceId","Id","drugName","EntityDTO","name","fabricCode","producerName","quantity","amount","console","log","removeItem","handleRemove","removeItem1","handleCreateOrder","createOrderDTO","props","listOfDrugs","dateTo","post","validateStatus","headers","Authorization","then","res","status","alert","handleClickOnClose","catch","err","isValidData","addDrugToPharmacyDTO","drugId","price","handleSelectedDateChange","date","handleSelectedCountChange","event","target","value","handleClickOnCreateOrder","length","handleUpdte","closeModal","get","localStorage","getItem","data","onAddClick","id","handleBack","componentDidMount","e","array","index","indexOf","splice","render","show","marginLeft","marginTop","width","prices","map","hoverrule"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst API_URL=\"http://localhost:8080\";\r\nclass Services extends Component {\r\n    state = {\r\n        drugsToAdd: [] ,\r\n        drugs:[],\r\n        page: 1,\r\n        modalSize:'lg',    \r\n        selectedDate:new Date(),\r\n        pharmacyId:'',\r\n        drugForAdd:'',\r\n        drugRemove:'',\r\n        selectedCount:'',\r\n        showDate:false,\r\n  \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\t\t\r\n\r\n    }\r\n\r\n    addItem = item => {\r\n        this.setState({\r\n            drugsToAdd: [\r\n            ...this.state.drugsToAdd,\r\n            item \r\n          ]\r\n        })\r\n    }\r\n\r\n    removeItem(e) {\r\n        var array = [...this.state.drugs];\r\n        var index = array.indexOf(e)\r\n        if (index !== -1) {\r\n          array.splice(index, 1);\r\n          this.setState({drugs: array});\r\n        }\r\n      }\r\n  \r\n      addItem1 = item => {\r\n        this.setState({\r\n            drugs: [\r\n            ...this.state.drugs,\r\n            item \r\n          ]\r\n        })\r\n    }\r\n\r\n    removeItem1(e) {\r\n        var array = [...this.state.drugsToAdd];\r\n        var index = array.indexOf(e)\r\n        if (index !== -1) {\r\n          array.splice(index, 1);\r\n          this.setState({drugsToAdd: array});\r\n        }\r\n      }\r\n  \r\n\r\n    handleAdd = () => {\r\n\r\n            \r\n        \r\n            let drugDTO = {\r\n                drugInstanceId: this.state.drugForAdd.Id,\r\n                drugName: this.state.drugForAdd.EntityDTO.name,\r\n                fabricCode: this.state.drugForAdd.EntityDTO.fabricCode,\r\n                producerName: this.state.drugForAdd.EntityDTO.producerName,\r\n                quantity:this.state.drugForAdd.EntityDTO.quantity,\r\n                amount:this.state.selectedCount\r\n            }\r\n            console.log(\"Bidibou\");\r\n            console.log(this.state.drugForAdd);\r\n            this.removeItem(this.state.drugForAdd);\r\n            console.log('res.data');\r\n            console.log(this.state.drugForAdd);\r\n            this.addItem(drugDTO);\r\n    \r\n            this.setState({\r\n                page:1,\r\n                selectedCount:'',\r\n                drugForAdd:''\r\n            })   \r\n        \r\n    }\r\n\r\n    handleRemove = (drugRemove) => {\r\n           \r\n            console.log(drugRemove)\r\n    \r\n            let drugDTO = {\r\n                Id: drugRemove.drugInstanceId,\r\n                EntityDTO:{\r\n               \r\n                name: drugRemove.drugName,\r\n                fabricCode: drugRemove.fabricCode,\r\n                producerName: drugRemove.producerName,\r\n                quantity:drugRemove.quantity\r\n                }\r\n            }\r\n\r\n            console.log(\"Bidibou\");\r\n            console.log(drugDTO);\r\n            this.removeItem1(drugRemove);\r\n            console.log('res.data');\r\n            console.log(this.state.drugForAdd);\r\n            this.addItem1(drugDTO);\r\n    \r\n            this.setState({\r\n                page:1,\r\n                selectedCount:'',\r\n            })   \r\n        }\r\n    \r\n\r\n    handleCreateOrder = () =>{\r\n        let createOrderDTO = {\r\n            pharmacyId:this.props.pharmacyId,\r\n            listOfDrugs: this.state.drugsToAdd,\r\n            dateTo:this.state.selectedDate\r\n        }\r\n      console.log(createOrderDTO)\r\n        Axios\r\n        .post(API_URL + \"/order/addNewOrder\", createOrderDTO, {\r\n            validateStatus: () => true,\r\n            headers: { Authorization: GetAuthorisation() },})\r\n        .then((res) =>{\r\n            console.log(res.status)\r\n            if (res.status === 201) {\r\n                alert(\"New Oreder is succesfully created\");\r\n                this.handleClickOnClose();\r\n            }else {\r\n                alert(\"It is not possibe to create new order\");\r\n            }\r\n        }).catch((err) => {\r\n        });\r\n    }\r\n\r\n    isValidData = (addDrugToPharmacyDTO) =>{\r\n        if(addDrugToPharmacyDTO.drugId===''){\r\n            return false\r\n        }\r\n\r\n        if(addDrugToPharmacyDTO.dateTo===new Date()){\r\n            return false\r\n        }\r\n\r\n        if(addDrugToPharmacyDTO.amount<1){\r\n            return false\r\n        }\r\n\r\n        if(addDrugToPharmacyDTO.price<1){\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    handleSelectedDateChange = (date) => {\r\n        this.setState({\r\n            selectedDate:date,\r\n        });\r\n\r\n    }\r\n\r\n\r\n    handleSelectedCountChange = (event) => {\r\n        this.setState({selectedCount:event.target.value});\r\n    }\r\n\r\n    handleClickOnCreateOrder = () =>{\r\n        if(this.state.drugsToAdd.length<1){\r\n          alert(\"Drug list is empty\");       \r\n        }else{\r\n            this.setState({\r\n                page:3,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClickOnClose = () => {\r\n        this.setState({\r\n            drugsToAdd: [] ,\r\n            drugs:[],\r\n            page: 1,    \r\n            selectedDate:new Date(),\r\n            pharmacyId:'',\r\n            drugForAdd:'',\r\n            selectedCount:'',\r\n        });\r\n        this.handleUpdte();\r\n        this.props.closeModal();\r\n    }\r\n\r\n    handleUpdte = () => {\r\n        Axios.get(API_URL + \"/drug/drugsInPharmacy/\" + localStorage.getItem(\"keyPharmacyId\"), {\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tthis.setState({ drugs: res.data });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n    }\r\n\r\n    onAddClick = (id) =>{\r\n        this.setState({page : 2,drugForAdd:id});\r\n  \r\n\r\n    }\r\n\r\n \r\n\r\n     handleBack = (event) =>{\r\n        this.setState({page: 1,selectedCount:''});\r\n    \r\n\r\n    }\r\n\r\n\r\n\r\n    render() { \r\n      \r\n\r\n        return ( \r\n            <Modal\r\n                show = {this.props.show}\r\n                size='lg'\r\n                centered\r\n                >\r\n                <Modal.Header >\r\n                    <Modal.Title style={{marginLeft:'37%'}} >\r\n                        Create Order\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n           \r\n                <div className=\"container\">  \r\n\r\n                  \r\n                <div className=\"container\" style={{ marginTop: \"5%\"}} > \r\n                <h5>Selected drugs</h5>\r\n                   \r\n                    <table border=\"1\" style={{ width: \"100%\" }}>\r\n                        <tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Usluga</th>\r\n\t\t\t\t\t\t\t\t<th>Cena</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t{this.props.prices.map((price) => (\r\n\t\t\t\t\t\t\t\t<tr >\r\n\t\t\t\t\t\t\t\t\t<td>{price.EntityDTO.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{price.EntityDTO.price}</td>\r\n                                    <td onClick={() => this.handleRemove(price)} onMouseOver={hoverrule}>\r\n                                     Remove\r\n                                    </td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n                            </tbody>\r\n\t\t\t\t\t\t</table>\r\n                      \r\n                    </div>\r\n                </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button  hidden={this.state.page===3} onClick={() => this.handleClickOnCreateOrder()}>Create order</Button>\r\n                    <Button onClick={() => this.handleClickOnClose()}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Services;"]},"metadata":{},"sourceType":"module"}