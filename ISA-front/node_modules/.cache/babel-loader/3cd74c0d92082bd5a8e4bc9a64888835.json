{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amijatovic\\\\Desktop\\\\isa\\\\ISA-projekat-main\\\\ISA-front\\\\src\\\\Pages\\\\Appointment\\\\CalendarForAppointments.js\";\nimport React, { Component } from \"react\";\nimport Header from '../../Components/Header';\nimport Axios from \"axios\";\nimport GetAuthorisation from '../../Funciton/GetAuthorisation';\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport AppoinmentDetails from \"../../Components/AppoinmentDetails\";\nimport { Redirect } from \"react-router-dom\";\nimport ModalDialog from \"../../Components/ModalDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\nconst localizer = momentLocalizer(moment);\n\nclass CalendarForAppointments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pharmacies: [],\n      events: [],\n      appointments: [],\n      openModalInfo: false,\n      name: \"\",\n      surname: \"\",\n      startDateTime: \"\",\n      endDateTime: \"\",\n      price: \"\",\n      pharmacy: {},\n      pharmacyName: \"\",\n      redirect: false,\n      redirectUrl: '',\n      id: '',\n      openModalSuccess: false,\n      appointmentStatus: \"\"\n    };\n\n    this.hasRole = reqRole => {\n      let roles = JSON.parse(localStorage.getItem(\"keyRole\"));\n      if (roles === null) return false;\n      if (reqRole === \"*\") return true;\n\n      for (let role of roles) {\n        if (role === reqRole) return true;\n      }\n\n      return false;\n    };\n\n    this.handleModalInfoClose = () => {\n      this.setState({\n        openModalInfo: false\n      });\n    };\n\n    this.handleEventClick = appointment => {\n      console.log(appointment);\n      let name = appointment.EntityDTO.patient == undefined || null ? \"\" : appointment.EntityDTO.patient.EntityDTO.name;\n      let surname = appointment.EntityDTO.patient == undefined || null ? \"\" : appointment.EntityDTO.patient.EntityDTO.surname;\n      this.setState({\n        name: name,\n        surname: surname,\n        startDateTime: appointment.EntityDTO.startDateTime,\n        endDateTime: appointment.EntityDTO.endDateTime,\n        price: appointment.EntityDTO.price,\n        openModalInfo: true,\n        id: appointment.Id,\n        appointmentStatus: appointment.EntityDTO.appointmentStatus\n      });\n    };\n\n    this.generateEventTitle = appointment => {\n      let name = appointment.EntityDTO.patient == null ? \"\" : appointment.EntityDTO.patient.EntityDTO.name;\n      let surname = appointment.EntityDTO.patient == null ? \"\" : appointment.EntityDTO.patient.EntityDTO.surname;\n      if (name === \"\" && surname === \"\") return \"Free appointment\";else return name + \" \" + surname;\n    };\n\n    this.mapAppointmentsToEvents = () => {\n      this.setState({\n        events: this.state.appointments.map(appointment => ({\n          start: new Date(appointment.EntityDTO.startDateTime),\n          end: new Date(appointment.EntityDTO.endDateTime),\n          title: this.generateEventTitle(appointment),\n          allDay: false,\n          resource: appointment\n        }))\n      });\n      console.log(this.state.events);\n    };\n\n    this.fetchDermatologistCalendar = () => {\n      Axios.get(API_URL + \"/users/dermatologist/pharmacies\", {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.setState({\n            redirect: true,\n            redirectUrl: \"/unauthorized\"\n          });\n        } else {\n          this.setState({\n            pharmacies: res.data,\n            pharmacy: res.data[0],\n            pharmacyName: res.data[0].EntityDTO.name\n          });\n          console.log(res.data);\n          Axios.get(API_URL + \"/appointment/dermatologist/calendar-for-pharmacy/\" + this.state.pharmacy.Id, {\n            validateStatus: () => true,\n            headers: {\n              Authorization: GetAuthorisation()\n            }\n          }).then(res => {\n            this.setState({\n              appointments: res.data\n            });\n            console.log(res.data);\n            this.mapAppointmentsToEvents();\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.fetchFarmacistCalendar = () => {\n      Axios.get(API_URL + \"/users/pharmacist/pharmacy\", {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 401) {\n          this.setState({\n            redirect: true,\n            redirectUrl: \"/unauthorized\"\n          });\n        } else {\n          this.setState({\n            pharmacy: res.data,\n            pharmacyName: res.data.EntityDTO.name\n          });\n          console.log(res.data);\n          Axios.get(API_URL + \"/appointment/pharmacist/calendar/\" + this.state.pharmacy.Id, {\n            validateStatus: () => true,\n            headers: {\n              Authorization: GetAuthorisation()\n            }\n          }).then(res => {\n            this.setState({\n              appointments: res.data\n            });\n            console.log(res.data);\n            this.mapAppointmentsToEvents();\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handlePharmacyChange = event => {\n      this.setState({\n        pharmacy: event.target.value\n      }, () => {\n        Axios.get(API_URL + \"/appointment/dermatologist/calendar-for-pharmacy/\" + this.state.pharmacy, {\n          validateStatus: () => true,\n          headers: {\n            Authorization: GetAuthorisation()\n          }\n        }).then(res => {\n          this.setState({\n            appointments: res.data\n          });\n          console.log(res.data);\n          this.mapAppointmentsToEvents();\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    };\n\n    this.handleExamine = () => {\n      this.setState({\n        redirect: true,\n        redirectUrl: \"/appointment-report/\" + this.state.id\n      });\n    };\n\n    this.handleDidNotShowUp = () => {\n      Axios.put(API_URL + \"/appointment/patient-did-not-come\", {\n        id: this.state.id\n      }, {\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        this.handleModalInfoClose();\n        if (this.hasRole(\"ROLE_DERMATHOLOGIST\")) this.fetchDermatologistCalendar();else this.fetchFarmacistCalendar();\n        console.log(res.data);\n        this.setState({\n          openModalSuccess: true\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleModalSuccessClose = () => {\n      this.setState({\n        openModalSuccess: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.hasRole(\"ROLE_DERMATHOLOGIST\")) this.fetchDermatologistCalendar();else this.fetchFarmacistCalendar();\n  }\n\n  render() {\n    if (this.state.redirect) return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: this.state.redirectUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 41\n    }, this);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          marginTop: \"10%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center mb-5 mt-2 text-uppercase\",\n          children: \"Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          hidden: !this.hasRole(\"ROLE_DERMATHOLOGIST\"),\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-left mt-2\",\n            children: \"Working calendar for selected pharmacy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-5 mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: this.handlePharmacyChange,\n              className: \"form-control\",\n              children: this.state.pharmacies.map(pharmacy => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pharmacy.Id,\n                children: [\"Dr \", pharmacy.EntityDTO.name]\n              }, pharmacy.Id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 74\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          hidden: !this.hasRole(\"ROLE_PHARMACIST\"),\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-left mb-5 mt-2\",\n            children: \"Working calendar for \" + this.state.pharmacyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          selectable: true,\n          onSelectEvent: event => this.handleEventClick(event.resource),\n          popup: true,\n          defaultView: Views.DAY,\n          localizer: localizer,\n          events: this.state.events,\n          startAccessor: \"start\",\n          endAccessor: \"end\",\n          style: {\n            height: 500\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AppoinmentDetails, {\n        header: \"Appointment information\",\n        show: this.state.openModalInfo,\n        onCloseModal: this.handleModalInfoClose,\n        name: this.state.name,\n        surname: this.state.surname,\n        startDateTime: this.state.startDateTime,\n        endDateTime: this.state.endDateTime,\n        price: this.state.price,\n        handleExamine: this.handleExamine,\n        handleDidNotShowUp: this.handleDidNotShowUp,\n        appointmentStatus: this.state.appointmentStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalDialog, {\n        show: this.state.openModalSuccess,\n        onCloseModal: this.handleModalSuccessClose,\n        header: \"Successfully added penalty to patient\",\n        text: \"You can start examination for another patient.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CalendarForAppointments;","map":{"version":3,"sources":["C:/Users/amijatovic/Desktop/isa/ISA-projekat-main/ISA-front/src/Pages/Appointment/CalendarForAppointments.js"],"names":["React","Component","Header","Axios","GetAuthorisation","Calendar","momentLocalizer","Views","moment","AppoinmentDetails","Redirect","ModalDialog","API_URL","localizer","CalendarForAppointments","state","pharmacies","events","appointments","openModalInfo","name","surname","startDateTime","endDateTime","price","pharmacy","pharmacyName","redirect","redirectUrl","id","openModalSuccess","appointmentStatus","hasRole","reqRole","roles","JSON","parse","localStorage","getItem","role","handleModalInfoClose","setState","handleEventClick","appointment","console","log","EntityDTO","patient","undefined","Id","generateEventTitle","mapAppointmentsToEvents","map","start","Date","end","title","allDay","resource","fetchDermatologistCalendar","get","validateStatus","headers","Authorization","then","res","status","data","catch","err","fetchFarmacistCalendar","handlePharmacyChange","event","target","value","handleExamine","handleDidNotShowUp","put","handleModalSuccessClose","componentDidMount","render","marginTop","DAY","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from '../../Components/Header';\nimport Axios from \"axios\";\nimport GetAuthorisation from '../../Funciton/GetAuthorisation';\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport AppoinmentDetails from \"../../Components/AppoinmentDetails\";\nimport { Redirect } from \"react-router-dom\";\nimport ModalDialog from \"../../Components/ModalDialog\";\nconst API_URL=\"http://localhost:8080\";\nconst localizer = momentLocalizer(moment)\n\nclass CalendarForAppointments extends Component {\n    state = {\n        pharmacies: [],\n        events: [],\n        appointments: [],\n        openModalInfo: false,\n        name: \"\",\n        surname: \"\",\n        startDateTime: \"\",\n        endDateTime: \"\",\n        price: \"\",\n        pharmacy: {},\n        pharmacyName : \"\",\n        redirect: false,\n        redirectUrl: '',\n        id: '',\n        openModalSuccess: false,\n        appointmentStatus: \"\"\n    };\n\n    hasRole = (reqRole) => {\n\t\tlet roles = JSON.parse(localStorage.getItem(\"keyRole\"));\n\n\t\tif (roles === null) return false;\n\n\t\tif (reqRole === \"*\") return true;\n\n\t\tfor (let role of roles) {\n\t\t\tif (role === reqRole) return true;\n\t\t}\n\t\treturn false;\n\t};\n\n    handleModalInfoClose = () => {\n        this.setState({ openModalInfo: false });\n    };\n\n    handleEventClick = (appointment) => {\n        console.log(appointment);\n        let name = appointment.EntityDTO.patient == undefined || null ? \"\" : appointment.EntityDTO.patient.EntityDTO.name;\n        let surname = appointment.EntityDTO.patient == undefined || null ? \"\" : appointment.EntityDTO.patient.EntityDTO.surname;\n\n        this.setState({\n            name: name,\n            surname: surname,\n            startDateTime: appointment.EntityDTO.startDateTime,\n            endDateTime: appointment.EntityDTO.endDateTime,\n            price: appointment.EntityDTO.price,\n            openModalInfo: true,\n            id: appointment.Id,\n            appointmentStatus: appointment.EntityDTO.appointmentStatus\n        });\n    };\n\n    generateEventTitle = (appointment) => {\n        let name = appointment.EntityDTO.patient == null ? \"\" : appointment.EntityDTO.patient.EntityDTO.name;\n        let surname = appointment.EntityDTO.patient == null ? \"\" : appointment.EntityDTO.patient.EntityDTO.surname;\n        if (name === \"\" && surname === \"\")\n            return \"Free appointment\"\n        else\n            return name + \" \" + surname;\n    };\n\n    mapAppointmentsToEvents = () => {\n        this.setState({ events: this.state.appointments.map(appointment => ({ start: new Date(appointment.EntityDTO.startDateTime), end: new Date(appointment.EntityDTO.endDateTime), title: this.generateEventTitle(appointment), allDay: false, resource: appointment })) });\n        console.log(this.state.events);\n    };\n\n    fetchDermatologistCalendar = () => {\n        Axios.get(API_URL + \"/users/dermatologist/pharmacies\", { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\n        .then((res) => {\n\n            if (res.status === 401) {\n                this.setState({\n                    redirect: true,\n                    redirectUrl: \"/unauthorized\"\n                });\n            } else {\n\n                this.setState({ pharmacies: res.data, pharmacy: res.data[0], pharmacyName: res.data[0].EntityDTO.name });\n                console.log(res.data);\n\n                Axios.get(API_URL + \"/appointment/dermatologist/calendar-for-pharmacy/\" + this.state.pharmacy.Id, { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\n                    .then((res) => {\n                        this.setState({ appointments: res.data });\n                        console.log(res.data);\n                        this.mapAppointmentsToEvents();\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    };\n\n    fetchFarmacistCalendar = () => {\n        Axios.get(API_URL + \"/users/pharmacist/pharmacy\", { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\n        .then((res) => {\n\n            if (res.status === 401) {\n                this.setState({\n                    redirect: true,\n                    redirectUrl: \"/unauthorized\"\n                });\n            } else {\n\n                this.setState({ pharmacy: res.data, pharmacyName: res.data.EntityDTO.name });\n                console.log(res.data);\n\n                Axios.get(API_URL + \"/appointment/pharmacist/calendar/\" + this.state.pharmacy.Id, { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\n                    .then((res) => {\n                        this.setState({ appointments: res.data });\n                        console.log(res.data);\n                        this.mapAppointmentsToEvents();\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    };\n\n    componentDidMount() {\n        if(this.hasRole(\"ROLE_DERMATHOLOGIST\"))\n            this.fetchDermatologistCalendar();\n        else\n            this.fetchFarmacistCalendar();\n    }\n\n    handlePharmacyChange = (event) => {\n        this.setState({ pharmacy: event.target.value }, () => {\n            Axios.get(API_URL + \"/appointment/dermatologist/calendar-for-pharmacy/\" + this.state.pharmacy, { validateStatus: () => true, headers: { Authorization: GetAuthorisation() } })\n            .then((res) => {\n                this.setState({ appointments: res.data });\n                console.log(res.data);\n                this.mapAppointmentsToEvents();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n        });\n    };\n\n    handleExamine = () => {\n\t\tthis.setState({\n\t\t\tredirect: true,\n\t\t\tredirectUrl: \"/appointment-report/\" + this.state.id\n\t\t});\n\t};\n\n\thandleDidNotShowUp = () => {\n\t\tAxios.put(API_URL + \"/appointment/patient-did-not-come\",\n\t\t\t{ id: this.state.id },\n\t\t\t{ headers: { Authorization: GetAuthorisation() } })\n\t\t\t.then((res) => {\n                this.handleModalInfoClose();\n\t\t\t\tif(this.hasRole(\"ROLE_DERMATHOLOGIST\"))\n                    this.fetchDermatologistCalendar();\n                else\n                    this.fetchFarmacistCalendar();\n                console.log(res.data);\n                this.setState({ openModalSuccess: true});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n    };\n    \n    handleModalSuccessClose = () => {\n\t\tthis.setState({\n\t\t\topenModalSuccess: false,\n\t\t});\n\t};\n\n    render() {\n\n        if (this.state.redirect) return <Redirect push to={this.state.redirectUrl} />;\n\n        return (\n            <React.Fragment>\n                \n                <Header />\n                <div className=\"container\" style={{ marginTop: \"10%\" }}>\n                    <h4 className=\"text-center mb-5 mt-2 text-uppercase\">Calendar</h4>\n                    <div hidden={!this.hasRole(\"ROLE_DERMATHOLOGIST\")}>\n                        <h5 className=\"text-left mt-2\">Working calendar for selected pharmacy</h5>\n                        <div className=\"mb-5 mt-2\">\n                            <select onChange={this.handlePharmacyChange} className=\"form-control\" >\n                                {this.state.pharmacies.map((pharmacy) => <option key={pharmacy.Id} value={pharmacy.Id}>Dr {pharmacy.EntityDTO.name}</option>)}\n                            </select>\n                        </div>\n                    </div>\n                    <div hidden={!this.hasRole(\"ROLE_PHARMACIST\")}>\n                    <h5 className=\"text-left mb-5 mt-2\">{\"Working calendar for \" + this.state.pharmacyName}</h5>\n                    </div>\n                    \n                    <Calendar\n                        selectable\n                        onSelectEvent={event => this.handleEventClick(event.resource)}\n                        popup\n                        defaultView={Views.DAY}\n                        localizer={localizer}\n                        events={this.state.events}\n                        startAccessor=\"start\"\n                        endAccessor=\"end\"\n                        style={{ height: 500 }}\n                    />\n                </div>\n                <AppoinmentDetails\n                    header=\"Appointment information\"\n                    show={this.state.openModalInfo}\n                    onCloseModal={this.handleModalInfoClose}\n                    name={this.state.name}\n                    surname={this.state.surname}\n                    startDateTime={this.state.startDateTime}\n                    endDateTime={this.state.endDateTime}\n                    price={this.state.price}\n                    handleExamine={this.handleExamine}\n                    handleDidNotShowUp={this.handleDidNotShowUp}\n                    appointmentStatus={this.state.appointmentStatus}\n                />\n                \n                <ModalDialog\n\t\t\t\t\tshow={this.state.openModalSuccess}\n\t\t\t\t\tonCloseModal={this.handleModalSuccessClose}\n\t\t\t\t\theader=\"Successfully added penalty to patient\"\n\t\t\t\t\ttext=\"You can start examination for another patient.\"\n\t\t\t\t/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CalendarForAppointments;"]},"metadata":{},"sourceType":"module"}