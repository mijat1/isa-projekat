{"ast":null,"code":"var _jsxFileName = \"E:\\\\aca\\\\isa\\\\nova-isa-projekat\\\\isa2021\\\\isa-projekat\\\\ISA-front\\\\src\\\\Pages\\\\Boats\\\\BoatFutureReservationsPage.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Header from '../../Components/Header';\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\"; //import DermatologistAppointmentPicture from \"../Images/appointment.png\" ;\n////import UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\n//import SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\n\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\n\nclass BoatFutureReservationsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reservations: [],\n      pharmacyId: \"\",\n      appointments: [],\n      hiddenSuccessfulAlert: true,\n      successfulHeader: \"\",\n      successfulMessage: \"\",\n      hiddenUnsuccessfulAlert: true,\n      UnsuccessfulHeader: \"\",\n      UnsuccessfulMessage: \"\"\n    };\n\n    this.hasRole = requestRole => {\n      let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\n      if (currentRoles === null) return false;\n\n      for (let currentRole of currentRoles) {\n        if (currentRole === requestRole) return true;\n      }\n\n      return false;\n    };\n\n    this.handleCloseSuccessfulAlert = () => {\n      this.setState({\n        hiddenSuccessfulAlert: true\n      });\n    };\n\n    this.handleCloseUnsuccessfulAlert = () => {\n      this.setState({\n        hiddenUnsuccessfulAlert: true\n      });\n    };\n\n    this.handleCancelAppointment = appointmentId => {\n      let appointmentIdObject = {\n        id: appointmentId\n      };\n      Axios.post(API_URL + \"/appointment/dermatologist/cancelAppointment\", appointmentIdObject, {\n        validateStatus: () => true,\n        headers: {\n          Authorization: GetAuthorisation()\n        }\n      }).then(res => {\n        if (res.status === 400) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Bad request\",\n            UnsuccessfulMessage: res.data\n          });\n        } else if (res.status === 500) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Internal server error\",\n            UnsuccessfulMessage: \"Server error.\"\n          });\n        } else if (res.status === 404) {\n          this.setState({\n            hiddenUnsuccessfulAlert: false,\n            UnsuccessfulHeader: \"Internal server error\",\n            UnsuccessfulMessage: res.data\n          });\n        } else if (res.status === 200) {\n          console.log(\"Success\");\n          this.setState({\n            hiddenSuccessfulAlert: false,\n            successfulHeader: \"Success\",\n            successfulMessage: \"You have successfully canceled the desired appointment! \",\n            hiddenEditInfo: true\n          });\n          this.refreshAppointments(appointmentId);\n        }\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          hiddenUnsuccessfulAlert: false,\n          UnsuccessfulHeader: \"Error\",\n          UnsuccessfulMessage: \"Something was wrong\"\n        });\n      });\n    };\n\n    this.isAvailableToCanceled = date => {\n      var appointmentDate = new Date(date);\n      appointmentDate.setDate(appointmentDate.getDate() - 1);\n\n      if (appointmentDate <= new Date()) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.moveToExaminationHistory = () => {\n      this.props.history.push(\"/historyDermatologistAppointmentsForPatient\");\n    };\n  }\n\n  componentDidMount() {\n    if (!this.hasRole(\"ROLE_CLIENT\")) {\n      this.props.history.push('/login');\n    }\n\n    Axios.get(API_URL + \"/reservation/findAllFutureBoatReservationClient\", {\n      validateStatus: () => true,\n      headers: {\n        Authorization: GetAuthorisation()\n      }\n    }).then(res => {\n      if (res.status === 401) {\n        this.props.history.push('/login');\n      } else {\n        this.setState({\n          reservations: res.data\n        });\n        console.log(res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  refreshAppointments(appointmentId) {\n    let newAppointmentsList = [];\n\n    for (let appointment of this.state.appointments) {\n      if (appointment.Id !== appointmentId) newAppointmentsList.push(appointment);\n    }\n\n    this.setState({\n      appointments: newAppointmentsList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-outline-primary btn-lg\",\n          onClick: () => this.moveToExaminationHistory(),\n          style: {\n            marginTop: \"2em\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          },\n          children: \"Examination history\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          hidden: this.state.appointments.length === 0,\n          className: \"text-center  mt-3  \",\n          children: \"Your future appointments!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          hidden: this.state.appointments.length !== 0,\n          className: \"text-center  mt-3 text-danger\",\n          children: \"You don't have future appointments!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-hover\",\n            style: {\n              width: \"80%\",\n              marginTop: \"5em\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.reservations.map(reservation => /*#__PURE__*/_jsxDEV(\"tr\", {\n                id: reservation.Id,\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  width: \"150px\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"img-fluid\",\n                    src: `data:image/jpeg;base64,${reservation.EntityDTO.unit.EntityDTO.image}`,\n                    width: \"300em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 20\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"S: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 12\n                    }, this), \" \", new Date(reservation.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\n                      day: \"2-digit\",\n                      month: \"2-digit\",\n                      year: \"numeric\",\n                      hour: \"2-digit\",\n                      minute: \"2-digit\"\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"S: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 12\n                    }, this), \" \", new Date(reservation.EntityDTO.endDateTime).toLocaleDateString(\"en-US\", {\n                      day: \"2-digit\",\n                      month: \"2-digit\",\n                      year: \"numeric\",\n                      hour: \"2-digit\",\n                      minute: \"2-digit\"\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"End time: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 12\n                    }, this), \" \", new Date(reservation.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\n                      hour: \"2-digit\",\n                      minute: \"2-digit\"\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Price:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 12\n                    }, this), \" \", reservation.EntityDTO.price, /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"  din\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 46\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Dermatologist: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 12\n                    }, this), \" \", reservation.EntityDTO.user.EntityDTO.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-outline-danger\",\n                    hidden: this.isAvailableToCanceled(new Date(reservation.EntityDTO.startDateTime)),\n                    onClick: () => this.handleCancelAppointment(reservation.Id),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 37\n                }, this)]\n              }, reservation.Id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 9\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BoatFutureReservationsPage;","map":{"version":3,"sources":["E:/aca/isa/nova-isa-projekat/isa2021/isa-projekat/ISA-front/src/Pages/Boats/BoatFutureReservationsPage.js"],"names":["React","Component","Axios","Header","GetAuthorisation","NavLink","Redirect","API_URL","BoatFutureReservationsPage","constructor","props","state","reservations","pharmacyId","appointments","hiddenSuccessfulAlert","successfulHeader","successfulMessage","hiddenUnsuccessfulAlert","UnsuccessfulHeader","UnsuccessfulMessage","hasRole","requestRole","currentRoles","JSON","parse","localStorage","getItem","currentRole","handleCloseSuccessfulAlert","setState","handleCloseUnsuccessfulAlert","handleCancelAppointment","appointmentId","appointmentIdObject","id","post","validateStatus","headers","Authorization","then","res","status","data","console","log","hiddenEditInfo","refreshAppointments","catch","err","isAvailableToCanceled","date","appointmentDate","Date","setDate","getDate","moveToExaminationHistory","history","push","componentDidMount","get","newAppointmentsList","appointment","Id","render","marginTop","marginLeft","marginRight","length","width","map","reservation","cursor","EntityDTO","unit","image","startDateTime","toLocaleDateString","day","month","year","hour","minute","endDateTime","toLocaleTimeString","price","user","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Header from '../../Components/Header';\r\nimport GetAuthorisation from \"../../Funciton/GetAuthorisation\";\r\n//import DermatologistAppointmentPicture from \"../Images/appointment.png\" ;\r\n////import UnsuccessfulAlert from \"../Components/Alerts/UnsuccessfulAlert\";\r\n//import SuccessfulAlert from \"../Components/Alerts/SuccessfulAlert\";\r\nimport {NavLink, Redirect } from \"react-router-dom\";\r\n\r\nconst API_URL=\"http://localhost:8080\";\r\n\r\nclass BoatFutureReservationsPage extends Component {\r\n\t\r\n  \r\n    \r\n    state = {\r\n        reservations : [],\r\n        pharmacyId: \"\",\r\n        appointments : [],\r\n        hiddenSuccessfulAlert: true,\r\n        successfulHeader: \"\",\r\n        successfulMessage: \"\",\r\n        hiddenUnsuccessfulAlert: true,\r\n        UnsuccessfulHeader: \"\",\r\n        UnsuccessfulMessage: \"\",\r\n\r\n\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n  \r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.hasRole(\"ROLE_CLIENT\")) {\r\n\t\t\tthis.props.history.push('/login');\r\n    }\r\n\r\n    \r\n    Axios.get(API_URL + \"/reservation/findAllFutureBoatReservationClient\", {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 401) {\r\n                    this.props.history.push('/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ reservations: res.data });\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n      \r\n\r\n  hasRole = (requestRole) => {\r\n    let currentRoles = JSON.parse(localStorage.getItem(\"keyRole\"));\r\n\r\n    if (currentRoles === null) return false;\r\n\r\n\r\n    for (let currentRole of currentRoles) {\r\n      if (currentRole === requestRole) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  handleCloseSuccessfulAlert = () => {\r\n\t\tthis.setState({ hiddenSuccessfulAlert: true });\r\n\t};\r\n\r\n\thandleCloseUnsuccessfulAlert= () => {\r\n\t\tthis.setState({ hiddenUnsuccessfulAlert: true });\r\n\t};\r\n\r\n\r\n\r\n\r\n    handleCancelAppointment = (appointmentId) => {\r\n  \r\n    let appointmentIdObject = { id: appointmentId};\r\n\r\n    Axios.post(API_URL + \"/appointment/dermatologist/cancelAppointment\",appointmentIdObject , {\r\n\t\t\tvalidateStatus: () => true,\r\n\t\t\theaders: { Authorization: GetAuthorisation() },\r\n\t\t})\r\n      .then((res) => {\r\n        if (res.status === 400) {\r\n          this.setState({ hiddenUnsuccessfulAlert: false,\r\n            UnsuccessfulHeader: \"Bad request\", \r\n            UnsuccessfulMessage: res.data });\r\n\r\n        } else if (res.status === 500) {\r\n\r\n          this.setState({ hiddenUnsuccessfulAlert: false, \r\n            UnsuccessfulHeader: \"Internal server error\", \r\n            UnsuccessfulMessage: \"Server error.\" });\r\n\r\n        } \r\n        else if (res.status === 404) {\r\n\r\n            this.setState({ hiddenUnsuccessfulAlert: false, \r\n              UnsuccessfulHeader: \"Internal server error\", \r\n              UnsuccessfulMessage: res.data });\r\n  \r\n        } else if (res.status === 200) {\r\n          console.log(\"Success\");\r\n          this.setState({\r\n            hiddenSuccessfulAlert: false,\r\n            successfulHeader: \"Success\",\r\n            successfulMessage: \"You have successfully canceled the desired appointment! \",\r\n            hiddenEditInfo: true,\r\n          });\r\n\r\n          this.refreshAppointments(appointmentId);\r\n\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ hiddenUnsuccessfulAlert: false,\r\n          UnsuccessfulHeader: \"Error\", \r\n          UnsuccessfulMessage: \"Something was wrong\" });\r\n      \r\n      });\r\n\r\n\r\n\r\n  }\r\n\r\n  refreshAppointments (appointmentId) {\r\n\r\n    let newAppointmentsList= [];\r\n    for (let appointment of this.state.appointments) {\r\n      if (appointment.Id !== appointmentId) \r\n          newAppointmentsList.push(appointment)\r\n    }\r\n\r\n    this.setState({\r\n     appointments : newAppointmentsList,\r\n    });\r\n\r\n  }\r\n\r\n\r\n  \r\n  \r\n\r\n    isAvailableToCanceled =(date) => {\r\n\r\n        var appointmentDate= new Date(date);\r\n        appointmentDate.setDate(appointmentDate.getDate() -1);\r\n\r\n        if(appointmentDate <= new Date()){\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n \r\n    moveToExaminationHistory =() => {\r\n\r\n       this.props.history.push(\"/historyDermatologistAppointmentsForPatient\");\r\n    }\r\n\r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n      \r\n      <React.Fragment>\r\n\r\n      <Header/>\r\n      \r\n         <div className=\"container\">\r\n\r\n\r\n         <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\r\n         onClick={() => this.moveToExaminationHistory()}\r\n         style={{  marginTop: \"2em\", marginLeft: \"auto\",marginRight: \"auto\" }}\r\n          >\r\n         Examination history\r\n         </button>\r\n\r\n         <h1 hidden={this.state.appointments.length === 0} className=\"text-center  mt-3  \" >Your future appointments!</h1>\r\n         <h1 hidden={this.state.appointments.length !== 0} className=\"text-center  mt-3 text-danger\"  >You don't have future appointments!</h1>\r\n\r\n\r\n\r\n      \r\n        \r\n    \r\n        <div className=\"container\">\r\n                    \r\n          <table className=\"table table-hover\" style={{ width: \"80%\", marginTop: \"5em\", marginLeft: \"auto\",marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.state.reservations.map((reservation) => (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tid={reservation.Id}\r\n\t\t\t\t\t\t\t\t\tkey={reservation.Id}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\r\n                   <td width=\"150px\">  \r\n                   <img className=\"img-fluid\" src={`data:image/jpeg;base64,${reservation.EntityDTO.unit.EntityDTO.image}`} width=\"300em\"  />                                \r\n                                    \r\n                    </td>\r\n                    \r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>S: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(reservation.EntityDTO.startDateTime).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n                                                month: \"2-digit\",\r\n                                                year: \"numeric\",\r\n                                                hour: \"2-digit\",\r\n                                                minute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n                                        <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>S: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(reservation.EntityDTO.endDateTime).toLocaleDateString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n                                                month: \"2-digit\",\r\n                                                year: \"numeric\",\r\n                                                hour: \"2-digit\",\r\n                                                minute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>End time: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{new Date(reservation.EntityDTO.endDateTime).toLocaleTimeString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\thour: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tminute: \"2-digit\",\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Price:</b>{\" \"}\r\n                                         {reservation.EntityDTO.price }\r\n                                             <b>  din</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  \r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Dermatologist: </b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{reservation.EntityDTO.user.EntityDTO.name}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                    \r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                                    <td>\r\n                                    <button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n                                            className=\"btn btn-outline-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\thidden={this.isAvailableToCanceled(new Date(reservation.EntityDTO.startDateTime))}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleCancelAppointment(reservation.Id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n                                    </td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n                </div>\r\n\r\n\r\n\r\n          \r\n        </div>\r\n        </React.Fragment>\r\n        \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BoatFutureReservationsPage;"]},"metadata":{},"sourceType":"module"}