{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amijatovic\\\\Desktop\\\\isa\\\\ISA-projekat-main\\\\ISA-front\\\\src\\\\Pages\\\\Appointment\\\\DermatologistSchedule.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../../Components/Header\";\nimport Axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ModalDialog from \"../../Components/ModalDialog\";\nimport GetAuthorisation from '../../Funciton/GetAuthorisation';\nimport { Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\n\nclass DermatologistSchedule extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: \"\",\n      selectedDate: new Date(),\n      hours: new Date().getHours(),\n      minutes: new Date().getMinutes(),\n      showDateError: \"none\",\n      openModalSuccess: false,\n      redirect: false,\n      redirectUrl: ''\n    };\n\n    this.handleDateChange = date => {\n      this.setState({\n        selectedDate: date\n      });\n    };\n\n    this.handleMinutesChange = event => {\n      if (event.target.value > 59) this.setState({\n        minutes: 59\n      });else if (event.target.value < 0) this.setState({\n        minutes: 0\n      });else this.setState({\n        minutes: event.target.value\n      });\n    };\n\n    this.handleHoursChange = event => {\n      if (event.target.value > 23) this.setState({\n        hours: 23\n      });else if (event.target.value < 0) this.setState({\n        hours: 0\n      });else this.setState({\n        hours: event.target.value\n      });\n    };\n\n    this.handleCheckAvailability = () => {\n      let today = new Date();\n      let consultationDate = new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate(), this.state.hours, this.state.minutes, 0, 0);\n      this.setState({\n        showDateError: \"none\"\n      });\n\n      if (new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate()).getTime() < new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime()) {\n        console.log(\"selected date is before today\");\n        this.setState({\n          showDateError: \"inline\"\n        });\n      } else if (new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate()).getTime() === new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime()) {\n        if (parseInt(this.state.hours) < today.getHours()) this.setState({\n          showDateError: \"inline\"\n        });else if (parseInt(this.state.hours) === today.getHours() && parseInt(this.state.minutes) < today.getMinutes()) this.setState({\n          showDateError: \"inline\"\n        });else {\n          let EntityDTO = {\n            patientId: this.state.id,\n            startDateTime: consultationDate\n          };\n          console.log(EntityDTO);\n          Axios.post(API_URL + \"/appointment/dermatologist/new/\", EntityDTO, {\n            validateStatus: () => true,\n            headers: {\n              Authorization: GetAuthorisation()\n            }\n          }).then(res => {\n            if (res.status === 400) {\n              this.setState({\n                showDateError: \"inline\"\n              });\n            } else if (res.status === 500) {\n              this.setState({\n                showDateError: \"inline\"\n              });\n            } else if (res.status === 201) {\n              this.setState({\n                openModalSuccess: true\n              });\n              console.log(res);\n            }\n          }).catch(err => {\n            this.setState({\n              showDateError: \"inline\"\n            });\n            console.log(err);\n          });\n        }\n      } else {\n        let EntityDTO = {\n          patientId: this.props.match.params.id,\n          startDateTime: consultationDate\n        };\n        Axios.post(API_URL + \"/appointment/dermatologist/new/\", EntityDTO, {\n          validateStatus: () => true,\n          headers: {\n            Authorization: GetAuthorisation()\n          }\n        }).then(res => {\n          if (res.status === 400) {\n            this.setState({\n              showDateError: \"inline\"\n            });\n          } else if (res.status === 500) {\n            this.setState({\n              showDateError: \"inline\"\n            });\n          } else if (res.status === 201) {\n            this.setState({\n              openModalSuccess: true\n            });\n            console.log(res);\n          }\n        }).catch(err => {\n          this.setState({\n            showDateError: \"inline\"\n          });\n          console.log(err);\n        });\n      }\n    };\n\n    this.handleModalSuccessClose = () => {\n      this.setState({\n        openModalSuccess: false,\n        redirect: true,\n        redirectUrl: \"/patient-profile/\" + this.state.id\n      });\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.setState({\n      id: id\n    });\n    Axios.get(API_URL + \"/users/dermatologist/auth\", {\n      validateStatus: () => true,\n      headers: {\n        Authorization: GetAuthorisation()\n      }\n    }).then(res => {\n      if (res.status === 401) {\n        this.setState({\n          redirect: true,\n          redirectUrl: \"/unauthorized\"\n        });\n      } else {\n        console.log(res.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    if (this.state.redirect) return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: this.state.redirectUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 41\n    }, this);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          marginTop: \"15%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mb-0\",\n          children: \"Select the perfect time for new examination in just a few steps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-col  mr-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                style: {\n                  fontSize: \"1.5em\"\n                },\n                children: \"Select date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"form-control\",\n                minDate: new Date(),\n                onChange: date => this.handleDateChange(date),\n                selected: this.state.selectedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-col ml-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                style: {\n                  fontSize: \"1.5em\"\n                },\n                children: \"Hours:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.handleHoursChange,\n                className: \"form-control mr-3\",\n                value: this.state.hours,\n                style: {\n                  width: \"9em\"\n                },\n                type: \"number\",\n                min: \"00\",\n                max: \"23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-col ml-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                style: {\n                  fontSize: \"1.5em\"\n                },\n                children: \"Minutes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                min: \"00\",\n                className: \"form-control\",\n                onChange: this.handleMinutesChange,\n                value: this.state.minutes,\n                style: {\n                  width: \"9em\"\n                },\n                type: \"number\",\n                max: \"59\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row justify-content-center mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-1 text-danger\",\n              style: {\n                fontSize: \"1.5em\",\n                display: this.state.showDateError\n              },\n              children: \"Can't schedule new examination in selected date and time!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row justify-content-center mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-lg\",\n              type: \"button\",\n              onClick: this.handleCheckAvailability,\n              children: \"Schedule new examination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalDialog, {\n        show: this.state.openModalSuccess,\n        onCloseModal: this.handleModalSuccessClose,\n        header: \"Successfully created and scheduled examination for patient\",\n        text: \"Start consultation for scheduled examination.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(DermatologistSchedule);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/amijatovic/Desktop/isa/ISA-projekat-main/ISA-front/src/Pages/Appointment/DermatologistSchedule.js"],"names":["React","Component","Header","Axios","DatePicker","ModalDialog","GetAuthorisation","Redirect","withRouter","API_URL","DermatologistSchedule","state","id","selectedDate","Date","hours","getHours","minutes","getMinutes","showDateError","openModalSuccess","redirect","redirectUrl","handleDateChange","date","setState","handleMinutesChange","event","target","value","handleHoursChange","handleCheckAvailability","today","consultationDate","getFullYear","getMonth","getDate","getTime","console","log","parseInt","EntityDTO","patientId","startDateTime","post","validateStatus","headers","Authorization","then","res","status","catch","err","props","match","params","handleModalSuccessClose","componentDidMount","get","data","render","marginTop","fontSize","width","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../../Components/Header\";\nimport Axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ModalDialog from \"../../Components/ModalDialog\";\nimport GetAuthorisation from '../../Funciton/GetAuthorisation';\nimport { Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nconst API_URL=\"http://localhost:8080\";\n\nclass DermatologistSchedule extends Component {\n    state = {\n        id: \"\",\n        selectedDate: new Date(),\n\t\thours: new Date().getHours(),\n        minutes: new Date().getMinutes(),\n        showDateError: \"none\",\n        openModalSuccess: false,\n        redirect: false,\n        redirectUrl: ''\n    };\n\n    handleDateChange = (date) => {\n\t\tthis.setState({ selectedDate: date });\n\t};\n\n\thandleMinutesChange = (event) => {\n\t\tif (event.target.value > 59) this.setState({ minutes: 59 });\n\t\telse if (event.target.value < 0) this.setState({ minutes: 0 });\n\t\telse this.setState({ minutes: event.target.value });\n\t};\n\n\thandleHoursChange = (event) => {\n\t\tif (event.target.value > 23) this.setState({ hours: 23 });\n\t\telse if (event.target.value < 0) this.setState({ hours: 0 });\n\t\telse this.setState({ hours: event.target.value });\n    };\n    \n    handleCheckAvailability = () => {\n        let today = new Date();\n        let consultationDate = new Date(this.state.selectedDate.getFullYear(),this.state.selectedDate.getMonth(),this.state.selectedDate.getDate(),this.state.hours,this.state.minutes,0,0);\n\t\tthis.setState({\n\t\t\tshowDateError: \"none\",\n        });\n        if ( new Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate()).getTime() <\n             new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime() \n        ) {\n            console.log(\"selected date is before today\");\n            this.setState({ showDateError: \"inline\" });\n        }\n\t\telse if (\n\t\t\tnew Date(this.state.selectedDate.getFullYear(), this.state.selectedDate.getMonth(), this.state.selectedDate.getDate()).getTime() ===\n\t\t\tnew Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime()\n\t\t) {\n\t\t\tif (parseInt(this.state.hours) < today.getHours()) this.setState({ showDateError: \"inline\" });\n\t\t\telse if (parseInt(this.state.hours) === today.getHours() && parseInt(this.state.minutes) < today.getMinutes())\n\t\t\t\tthis.setState({ showDateError: \"inline\" });\n\t\t\telse {\n                let EntityDTO = {\n                    patientId: this.state.id,\n                    startDateTime: consultationDate\n                };\n                console.log(EntityDTO);\n\t\t\t\tAxios.post(API_URL + \"/appointment/dermatologist/new/\", EntityDTO, {\n                    validateStatus: () => true,\n                    headers: { Authorization: GetAuthorisation() },\n                })\n                    .then((res) => {\n                        if (res.status === 400) {\n                            this.setState({ showDateError: \"inline\" });\n                        } else if (res.status === 500) {\n                            this.setState({ showDateError: \"inline\" });\n                        } else if (res.status === 201) {\n                            this.setState({ openModalSuccess: true });\n                            console.log(res);\n                        }\n                    })\n                    .catch((err) => {\n                        this.setState({ showDateError: \"inline\" });\n                        console.log(err);\n                    });\n\t\t\t}\n\t\t} else {\n\t\t\tlet EntityDTO = {\n\t\t\t\tpatientId: this.props.match.params.id,\n\t\t\t\tstartDateTime: consultationDate\n\t\t\t};\n\t\t\tAxios.post(API_URL + \"/appointment/dermatologist/new/\", EntityDTO, {\n\t\t\t\tvalidateStatus: () => true,\n\t\t\t\theaders: { Authorization: GetAuthorisation() },\n\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (res.status === 400) {\n\t\t\t\t\t\tthis.setState({ showDateError: \"inline\" });\n\t\t\t\t\t} else if (res.status === 500) {\n\t\t\t\t\t\tthis.setState({ showDateError: \"inline\" });\n\t\t\t\t\t} else if (res.status === 201) {\n\t\t\t\t\t\tthis.setState({ openModalSuccess: true });\n\t\t\t\t\t\tconsole.log(res);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tthis.setState({ showDateError: \"inline\" });\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t}\n\t};\n\n    componentDidMount () {\n        const id = this.props.match.params.id;\n        this.setState({\n\t\t\tid: id\n\t\t});\n\n        Axios.get(API_URL + \"/users/dermatologist/auth\", { validateStatus: () => true, headers: { Authorization: GetAuthorisation() }})\n            .then((res) => {\n\t\t\tif (res.status === 401) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tredirect: true,\n\t\t\t\t\tredirectUrl: \"/unauthorized\"\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log(res.data);\n\t\t\t}\n\t\t    })\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n    }\n\n    handleModalSuccessClose = () => {\n\t\tthis.setState({\n\t\t\topenModalSuccess: false,\n\t\t\tredirect: true,\n\t\t\tredirectUrl: \"/patient-profile/\" + this.state.id\n\t\t});\n\t};\n\n    render() {\n\n        if (this.state.redirect) return <Redirect push to={this.state.redirectUrl} />;\n\n        return (\n            <React.Fragment>\n\t\t\t\t<Header />\n\n                <div className=\"container\" style={{ marginTop: \"15%\" }}>\n\t\t\t\t\t<h3 className=\"text-center mb-0\">\n\t\t\t\t\t\tSelect the perfect time for new examination in just a few steps\n\t\t\t\t\t</h3>\n\t\t\t\t\t<div className=\"control-group mt-5\">\n\t\t\t\t\t\t<div className=\"form-row justify-content-center\">\n\t\t\t\t\t\t\t<div className=\"form-col  mr-3\">\n\t\t\t\t\t\t\t\t<div className=\"mb-2\" style={{ fontSize: \"1.5em\" }}>\n\t\t\t\t\t\t\t\t\tSelect date:\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\tminDate={new Date()}\n\t\t\t\t\t\t\t\t\tonChange={(date) => this.handleDateChange(date)}\n\t\t\t\t\t\t\t\t\tselected={this.state.selectedDate}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-col ml-2\">\n\t\t\t\t\t\t\t\t<div className=\"mb-2\" style={{ fontSize: \"1.5em\" }}>\n\t\t\t\t\t\t\t\t\tHours:\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonChange={this.handleHoursChange}\n\t\t\t\t\t\t\t\t\tclassName=\"form-control mr-3\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.hours}\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"9em\" }}\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tmin=\"00\"\n\t\t\t\t\t\t\t\t\tmax=\"23\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-col ml-2\">\n\t\t\t\t\t\t\t\t<div className=\"mb-2\" style={{ fontSize: \"1.5em\" }}>\n\t\t\t\t\t\t\t\t\tMinutes:\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tmin=\"00\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleMinutesChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.minutes}\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"9em\" }}\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tmax=\"59\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-row justify-content-center mt-4\">\n\t\t\t\t\t\t\t<div className=\"mt-1 text-danger\" style={{ fontSize: \"1.5em\", display: this.state.showDateError }}>\n\t\t\t\t\t\t\t\tCan't schedule new examination in selected date and time!\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-row justify-content-center mt-4\">\n\t\t\t\t\t\t\t<button className=\"btn btn-primary btn-lg\" type=\"button\" onClick={this.handleCheckAvailability}>\n\t\t\t\t\t\t\t\tSchedule new examination\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n                <ModalDialog\n\t\t\t\t\tshow={this.state.openModalSuccess}\n\t\t\t\t\tonCloseModal={this.handleModalSuccessClose}\n\t\t\t\t\theader=\"Successfully created and scheduled examination for patient\"\n\t\t\t\t\ttext=\"Start consultation for scheduled examination.\"\n\t\t\t\t/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(DermatologistSchedule);"]},"metadata":{},"sourceType":"module"}